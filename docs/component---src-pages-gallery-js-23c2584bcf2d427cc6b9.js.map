{"version":3,"sources":["webpack:///./src/components/slider-arrows.js","webpack:///./src/pages/gallery.js"],"names":["slider_arrows","_ref","icon","className","to","onClick","react_default","a","createElement","type","aria-label","style","zIndex","color","fontSize","Gallery","componentDidMount","this","props","data","allFile","edges","forEach","node","url","childImageSharp","fluid","src","document","getElementById","id","firstChild","backgroundImage","filter","render","settings","accessibility","arrows","adaptiveHeight","dots","infinite","autoplay","speed","slidesToShow","slidesToScroll","prevArrow","nextArrow","Fragment","seo","title","keywords","layout","lib_default","map","_ref2","key","gatsby_image_default","background","Component","GalleryImages"],"mappings":"iMAEeA,EAAA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,UAAWC,EAApBH,EAAoBG,GAAIC,EAAxBJ,EAAwBI,QAAxB,OACbC,EAAAC,EAAAC,cAAA,UACEC,KAAK,SACLJ,QAASA,EACTF,UAAS,oCAAsCA,EAC/CO,aAAYN,EACZO,MAAO,CACLC,OAAQ,KACRC,MAAO,QACPC,SAAU,QAGZR,EAAAC,EAAAC,cAAA,KAAGL,UAAS,GAAKD,6DCFfa,oGACJC,kBAAA,WACeC,KAAKC,MAAMC,KAEnBC,QAAQC,MAAMC,QAAQ,SAAArB,GAAc,IAAXsB,EAAWtB,EAAXsB,KACtBC,EAAM,QAAUD,EAAKE,gBAAgBC,MAAMC,IAAM,KAEvDC,SAASC,eAAT,GACKN,EAAKO,IACRC,WAAWA,WAAWpB,MAAMqB,gBAAkBR,EAEhDI,SAASC,eAAT,GAA2BN,EAAKO,IAAMC,WAAWA,WAAWpB,MAAMsB,OAChE,kCAINC,OAAA,WACE,IAAMf,EAAOF,KAAKC,MAAMC,KAElBgB,EAAW,CACfC,eAAe,EACfC,QAAQ,EACRC,gBAAgB,EAChBC,MAAM,EACNC,UAAU,EACVC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,UAAWvC,EAAAC,EAAAC,cAACR,EAAD,CAAaI,GAAG,OAAOF,KAAK,sBACvC4C,UAAWxC,EAAAC,EAAAC,cAACR,EAAD,CAAaI,GAAG,OAAOF,KAAK,wBAGzC,OACEI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwC,SAAA,KACEzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CACEC,MAAM,UACNC,SAAU,CACR,YACA,sBACA,qBACA,QACN,iBACA,aAGE5C,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACE7C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,WACbG,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAW4B,EACThB,EAAKC,QAAQC,MAAMgC,IAAI,SAAAC,GAAc,IAAX/B,EAAW+B,EAAX/B,KACzB,OACEjB,EAAAC,EAAAC,cAAA,OAAK+C,IAAKhC,EAAKO,GAAIA,GAAIP,EAAKO,IAC1BxB,EAAAC,EAAAC,cAACgD,EAAAjD,EAAD,CACEmB,MAAOH,EAAKE,gBAAgBC,MAC5Bf,MAAO,CAAE8C,WAAU,sBAtDnBC,aAqETC,GAFE5C,YAEW","file":"component---src-pages-gallery-js-23c2584bcf2d427cc6b9.js","sourcesContent":["import React from \"react\";\n\nexport default ({ icon, className, to, onClick }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    className={`button button--text button--icon ${className}`}\n    aria-label={to}\n    style={{\n      zIndex: \"10\",\n      color: \"white\",\n      fontSize: \"3em\"\n    }}\n  >\n    <i className={`${icon}`} />\n  </button>\n);\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport Slider from \"react-slick\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport SliderArrow from \"../components/slider-arrows\";\n\nimport \"./gallery.scss\";\n\nimport { graphql } from \"gatsby\";\n\nclass Gallery extends Component {\n  componentDidMount() {\n    const data = this.props.data;\n\n    data.allFile.edges.forEach(({ node }) => {\n      const url = \"url('\" + node.childImageSharp.fluid.src + \"')\";\n\n      document.getElementById(\n        `${node.id}`\n      ).firstChild.firstChild.style.backgroundImage = url;\n\n      document.getElementById(`${node.id}`).firstChild.firstChild.style.filter =\n        \"blur(20px) brightness(50%)\";\n    });\n  }\n\n  render() {\n    const data = this.props.data;\n\n    const settings = {\n      accessibility: false,\n      arrows: true,\n      adaptiveHeight: true,\n      dots: false,\n      infinite: true,\n      autoplay: true,\n      speed: 1000,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      prevArrow: <SliderArrow to=\"prev\" icon=\"fas fa-angle-left\" />,\n      nextArrow: <SliderArrow to=\"next\" icon=\"fas fa-angle-right\" />\n    };\n\n    return (\n      <>\n        <SEO\n          title=\"Gallery\"\n          keywords={[\n            \"reflexons\",\n            \"calcutta university\",\n            \"coding competition\",\n            \"games\",\n\t\t\t\t\t\t\"counter strike\",\n\t\t\t\t\t\t\"gallery\"\n          ]}\n        />\n        <Layout>\n          <div className=\"Gallery\">\n            <Slider {...settings}>\n              {data.allFile.edges.map(({ node }) => {\n                return (\n                  <div key={node.id} id={node.id}>\n                    <Img\n                      fluid={node.childImageSharp.fluid}\n                      style={{ background: `black` }}\n                    />\n                  </div>\n                );\n              })}\n            </Slider>\n          </div>\n        </Layout>\n      </>\n    );\n  }\n}\n\nexport default Gallery;\n\nexport const GalleryImages = graphql`\n  query {\n    allFile(\n      filter: { extension: { eq: \"jpg\" }, relativeDirectory: { eq: \"gallery\" } }\n    ) {\n      edges {\n        node {\n          id\n          name\n          relativeDirectory\n          childImageSharp {\n            fluid(maxWidth: 1280) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}